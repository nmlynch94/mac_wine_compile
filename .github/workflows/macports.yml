name: macports

on:
  push:
    paths-ignore:
    - '.github/**'
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  wine-staging:
    runs-on:  macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install macports
        run: . $GITHUB_WORKSPACE/.github/workflows/bootstrap_macports.sh

      - name: Determine list of changed ports
        run: |
          set -eu
          echo "/opt/local/bin" >> $GITHUB_PATH
          echo "/opt/local/sbin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
           sudo port selfupdate
           sudo port install     autoconf \
                                 bison \
                                 faudio \
                                 freetype \
                                 gstreamer1-gst-plugins-base \
                                 gnutls \
                                 mingw-w64 \
                                 libpcap

      - name: Fetch wine-staging source
        run: git clone --depth=1 https://github.com/wine-staging/wine-staging

      - name: Grab winesource from staging
        run: |
          git clone https://github.com/wine-mirror/wine.git
          cd wine
          git checkout $($GITHUB_WORKSPACE/wine-staging/staging/patchinstall.py --upstream-commit)

      - name: Apply Staging patches
        run: |
          $GITHUB_WORKSPACE/wine-staging/staging/patchinstall.py DESTDIR=$GITHUB_WORKSPACE/wine --all

      - name: Configure wine64
        env:
          # Make dlopen() function like wine_dlopen()
          LDFLAGS: "-Wl,-headerpad_max_install_names,-rpath,@loader_path/../,-rpath,/opt/local/lib,-rpath,/opt/X11/lib"
          # Avoid weird linker errors with Xcode 10 and later
          MACOSX_DEPLOYMENT_TARGET: "10.14"
        run: |
          mkdir -p $GITHUB_WORKSPACE/build
          cd $GITHUB_WORKSPACE/wine
          ./configure   --prefix=$GITHUB_WORKSPACE/build --disable-option-checking \
            --disable-tests \
            --without-alsa \
            --without-capi \
            --with-coreaudio \
            --with-cups \
            --without-dbus \
            --without-fontconfig \
            --with-freetype \
            --with-gettext \
            --without-gettextpo \
            --without-gphoto \
            --with-gnutls \
            --without-gssapi \
            --with-gstreamer \
            --with-inotify \
            --without-krb5 \
            --with-mingw \
            --without-netapi \
            --with-opencl \
            --with-opengl \
            --without-oss \
            --with-pcap \
            --without-pcsclite \
            --with-pthread \
            --without-pulse \
            --without-sane \
            --with-sdl \
            --without-udev \
            --with-unwind \
            --without-usb \
            --without-v4l2 \
            --without-wayland \
            --without-x

      - name: Build wine64
        run: |
          cd $GITHUB_WORKSPACE/wine
          make -j$(sysctl -n hw.ncpu 2>/dev/null)
          
      - name: Install wine64
        run: |
          cd $GITHUB_WORKSPACE/wine
          make -j$(sysctl -n hw.ncpu 2>/dev/null) install

      - name: Tar Wine
        run: |
          tar -czvf wine.tar.gz $GITHUB_WORKSPACE/build/*

      - name: Upload Wine
        uses: actions/upload-artifact@v3
        with:
          name: wine.tar.gz
          path: wine.tar.gz
